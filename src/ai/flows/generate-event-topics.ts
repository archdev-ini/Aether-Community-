// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview A flow for generating event topic ideas using AI, based on current trends and user interests.
 *
 * - generateEventTopics - A function that uses AI to generate event topic ideas.
 * - GenerateEventTopicsInput - The input type for the generateEventTopics function.
 * - GenerateEventTopicsOutput - The return type for the generateEventTopics function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateEventTopicsInputSchema = z.object({
  trendingThemes: z
    .string()
    .describe('A list of trending themes in architecture and design.'),
  userInterests: z
    .string()
    .describe('A list of user interests within the Aether Hub community.'),
});
export type GenerateEventTopicsInput = z.infer<typeof GenerateEventTopicsInputSchema>;

const GenerateEventTopicsOutputSchema = z.object({
  topicIdeas: z
    .string()
    .describe('A list of event topic ideas generated by the AI.'),
});
export type GenerateEventTopicsOutput = z.infer<typeof GenerateEventTopicsOutputSchema>;

export async function generateEventTopics(input: GenerateEventTopicsInput): Promise<GenerateEventTopicsOutput> {
  return generateEventTopicsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateEventTopicsPrompt',
  input: {schema: GenerateEventTopicsInputSchema},
  output: {schema: GenerateEventTopicsOutputSchema},
  prompt: `You are a community manager for Aether Hub, a creative ecosystem for architects and designers across Africa.
Your goal is to generate engaging and relevant event topic ideas based on current trends and user interests.

Trending Themes: {{{trendingThemes}}}
User Interests: {{{userInterests}}}

Generate a list of event topic ideas that would appeal to the Aether Hub community. Be specific and actionable.

Example:
[
  "Designing Sustainable Housing in Urban Africa",
  "The Role of Technology in Modern Architectural Design",
  "Preserving Cultural Heritage Through Innovative Design",
]

Return the topic ideas as a JSON array of strings.`,
});

const generateEventTopicsFlow = ai.defineFlow(
  {
    name: 'generateEventTopicsFlow',
    inputSchema: GenerateEventTopicsInputSchema,
    outputSchema: GenerateEventTopicsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
